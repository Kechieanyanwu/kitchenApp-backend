(()=>{var e={736:(e,t,s)=>{const a=s(278),r=s(752).Strategy,{User:o}=s(47),{comparePassword:n}=s(481),i=new r({usernameField:"email",passwordField:"password"},(async(e,t,s)=>{let a,r;try{a=await o.findOne({where:{email:e}})}catch(e){s(e)}if(a){try{r=await n(t,a.hashed_password)}catch(e){s(e)}return s(null,!!r&&a)}return s(null,!1)}));a.serializeUser(((e,t)=>{t(null,e.id)})),a.deserializeUser((async(e,t)=>{let s;try{s=await o.findByPk(e)}catch(e){t(e)}t(null,s)})),a.use(i)},502:(e,t,s)=>{s(818).config(),e.exports={development:{username:process.env.POSTGRES_DEV_USER,password:process.env.POSTGRES_DEV_PASSWORD,database:process.env.POSTGRES_DEV_DB_NAME,host:process.env.POSTGRES_DEV_HOST,dialect:"postgres"},test:{username:process.env.POSTGRES_TEST_USER,password:process.env.POSTGRES_TEST_PASSWORD,database:process.env.POSTGRES_TEST_DB_NAME,host:process.env.POSTGRES_TEST_HOST,dialect:"postgres"},production:{username:process.env.POSTGRES_USER,password:process.env.POSTGRES_PASSWORD,database:process.env.POSTGRES_DB_NAME,host:process.env.POSTGRES_HOST,dialect:"postgres"}}},300:(e,t,s)=>{"use strict";const{Model:a,DataTypes:r}=s(31),o=s(530);class n extends a{static associate(e){}}n.init({category_name:r.STRING,user_id:{type:r.INTEGER,allowNull:!1,onDelete:"CASCADE",references:{model:"Users",key:"id"}}},{sequelize:o.sequelize,modelName:"Category",tableName:"Categories",createdAt:"date_created",updatedAt:"date_updated",underscored:!0}),e.exports={Category:n}},162:(e,t,s)=>{"use strict";const{Model:a,DataTypes:r}=s(31),o=s(530);class n extends a{static associate(e){}}n.init({item_name:r.STRING,quantity:r.INTEGER,category_id:{type:r.INTEGER,allowNull:!1,onDelete:"CASCADE",references:{model:"Categories",key:"id"}},user_id:{type:r.INTEGER,allowNull:!1,onDelete:"CASCADE",references:{model:"Users",key:"id"}},purchased:r.BOOLEAN},{sequelize:o.sequelize,modelName:"Checklist",tableName:"Checklists",createdAt:"date_created",updatedAt:"date_updated",underscored:!0}),e.exports={Checklist:n}},530:(e,t,s)=>{"use strict";const a=s(932),{Sequelize:r}=s(31),o=a.env.NODE_ENV||"development",n=s(502)[o],i={};let d;d=n.use_env_variable?new r(a.env[n.use_env_variable],n):new r(n.database,n.username,n.password,n),i.sequelize=d,i.Sequelize=r,e.exports=i},758:(e,t,s)=>{"use strict";const{Model:a,DataTypes:r}=s(31),o=s(530);class n extends a{static associate(e){}}n.init({item_name:r.STRING,quantity:r.INTEGER,category_id:{type:r.INTEGER,allowNull:!1,onDelete:"CASCADE",references:{model:"Categories",key:"id"}},user_id:{type:r.INTEGER,allowNull:!1,onDelete:"CASCADE",references:{model:"Users",key:"id"}}},{sequelize:o.sequelize,modelName:"Inventory",tableName:"Inventories",createdAt:"date_created",updatedAt:"date_updated",underscored:!0}),e.exports={Inventory:n}},47:(e,t,s)=>{"use strict";const{Model:a,DataTypes:r}=s(31),o=s(530);class n extends a{static associate(e){}}n.init({username:r.STRING,email:r.STRING,hashed_password:r.STRING,salt:r.STRING},{sequelize:o.sequelize,modelName:"User",tableName:"Users",createdAt:"date_created",updatedAt:"date_updated",underscored:!0}),e.exports={User:n}},784:(e,t,s)=>{const{sequelize:a}=s(530),{Checklist:r}=s(162),{Inventory:o}=s(758),{nonExistentItemError:n}=s(811),{validateID:i}=s(843);e.exports={getAllItems:async(e,t,s)=>{try{return await e.findAll({raw:!0,attributes:{exclude:["date_created","date_updated"]},transaction:s})}catch(e){throw e}},addNewItem:async(e,t,s)=>{try{const a=await e.create(t,{transaction:s});return delete a.dataValues.date_created,delete a.dataValues.date_updated,"User"==e.name&&(delete a.dataValues.hashed_password,delete a.dataValues.salt),a.dataValues}catch(e){throw e}},getItem:async(e,t,s)=>{try{const a=await e.findByPk(t,{attributes:{exclude:["date_created","date_updated"]},transaction:s});if(null===a)throw n;return a.dataValues}catch(e){throw e}},updateItem:async(e,t,s,a)=>{let r;try{r=await i(t,e,a)}catch(e){throw e}return await r.update(s,{transaction:a}),delete r.dataValues.date_created,delete r.dataValues.date_updated,r.dataValues},deleteItem:async(e,t,s)=>{let a;try{a=await i(t,e,s)}catch(e){throw e}if(await a.destroy({transaction:s}),"User"!=e.name)return await e.findAll({raw:!0,attributes:{exclude:["date_created","date_updated"]},transaction:s})},moveCheckedItem:async(e,t)=>{let s;try{s=await i(e,r,t)}catch(e){throw e}return newItem=s.get({transaction:t}),delete newItem.id,delete newItem.purchased,await o.create(newItem,{transaction:t}),await r.destroy({where:{id:e},transaction:t}),await r.findAll({attributes:{exclude:["date_created","date_updated"]},transaction:t})}}},446:(e,t,s)=>{const a=s(252).Router(),{getAllItems:r,addNewItem:o,getItem:n,updateItem:i,deleteItem:d}=s(784),{validateNewCategory:c}=s(843),u=s(268),{Category:l}=s(300),m=u.json();a.get("/",(async(e,t,s)=>{let a;try{a=await r(l)}catch(e){s(e)}t.status(200).json(a)})),a.get("/:itemID",(async(e,t,s)=>{const a=e.params.itemID;let r;try{r=await n(l,a)}catch(e){e.status=400,s(e)}t.status(200).send(r)})),a.post("/",m,c,(async(e,t,s)=>{let a;const r={category_name:e.category_name,user_id:e.user_id};try{a=await o(l,r)}catch(e){e.status=400,s(e)}t.status(201).send(a)})),a.put("/:itemID",m,(async(e,t,s)=>{const a=e.params.itemID,r=e.body;let o;try{o=await i(l,a,r)}catch(e){s(e)}t.status(200).send(o)})),a.delete("/:itemID",m,(async(e,t,s)=>{const a=e.params.itemID;let r;try{r=await d(l,a)}catch(e){s(e)}t.status(200).send(r)})),a.use(((e,t,s,a)=>{s.status(e.status).send(e.message)})),e.exports=a},402:(e,t,s)=>{const a=s(252).Router(),{getAllItems:r,getItem:o,addNewItem:n,updateItem:i,deleteItem:d,moveCheckedItem:c}=s(784),{validateNewGroceryItem:u}=s(843),l=s(268).json(),{Checklist:m}=s(162);a.use(((e,t,s)=>{console.log("Logging headers before entering checklist route",e.headers),s()})),a.get("/",(async(e,t,s)=>{let a;try{a=await r(m)}catch(e){s(e)}t.status(200).json(a)})),a.get("/:itemID",(async(e,t,s)=>{const a=e.params.itemID;let r;try{r=await o(m,a)}catch(e){e.status=400,s(e)}t.status(200).send(r)})),a.post("/",l,u,(async(e,t,s)=>{let a;const r={item_name:e.item_name,quantity:e.quantity,category_id:e.category_id,user_id:e.user_id};try{a=await n(m,r)}catch(e){e.status=400,s(e)}t.status(201).send(a)})),a.put("/:itemID",l,(async(e,t,s)=>{const a=e.params.itemID,r=e.body;let o;if(!0===r.purchased){let e;try{e=await c(a)}catch(e){throw e}t.status(200).send(e)}else{try{o=await i(m,a,r)}catch(e){s(e)}t.status(200).send(o)}})),a.delete("/:itemID",l,(async(e,t,s)=>{const a=e.params.itemID;let r;try{r=await d(m,a)}catch(e){s(e)}t.status(200).send(r)})),a.use(((e,t,s)=>{s.status(e.status).send(e.message)})),e.exports=a},326:(e,t,s)=>{const a=s(252).Router(),{getAllItems:r,getItem:o,addNewItem:n,updateItem:i,deleteItem:d}=s(784),{validateNewGroceryItem:c}=s(843),u=s(268),{Inventory:l}=s(758),m=u.json();a.get("/",(async(e,t,s)=>{let a;try{a=await r(l)}catch(e){s(e)}t.status(200).json(a)})),a.get("/:itemID",(async(e,t,s)=>{const a=e.params.itemID;let r;try{r=await o(l,a)}catch(e){e.status=400,s(e)}t.status(200).send(r)})),a.post("/",m,c,(async(e,t,s)=>{let a;const r={item_name:e.item_name,quantity:e.quantity,category_id:e.category_id,user_id:e.user_id};try{a=await n(l,r)}catch(e){e.status=400,s(e)}t.status(201).send(a)})),a.put("/:itemID",m,(async(e,t,s)=>{const a=e.params.itemID,r=e.body;let o;try{o=await i(l,a,r)}catch(e){s(e)}t.status(200).send(o)})),a.delete("/:itemID",m,(async(e,t,s)=>{const a=e.params.itemID;let r;try{r=await d(l,a)}catch(e){s(e)}t.status(200).send(r)})),a.use(((e,t,s,a)=>{s.status(e.status).send(e.message)})),e.exports=a},997:(e,t,s)=>{const a=s(252).Router(),r=s(268).json(),{validateNewUser:o}=s(843),{hashPassword:n}=s(481),{addNewItem:i,deleteItem:d}=s(784),{User:c}=s(47);a.post("/register",r,o,(async(e,t,s)=>{const{hash:a,salt:r}=await n(e.password),o={username:e.username,email:e.email,hashed_password:a,salt:r};let d;try{d=await i(c,o)}catch(e){s(e)}t.status(201).send(d)})),a.delete("/:itemID",r,(async(e,t,s)=>{const a=e.params.itemID;let r;try{r=await d(c,a)}catch(e){s(e)}t.status(200).send(r)})),a.use(((e,t,s,a)=>{s.status(e.status).send(e.message)})),e.exports=a},985:(e,t,s)=>{s(818).config();const a=s(252),r=a(),o=process.env.PORT,n=s(577);r.use(n()),r.use(a.json()),r.use(a.urlencoded({extended:!0}));const i=s(977),d=s(857)(i.Store),{sequelize:c}=s(530),u=s(446),l=s(402),m=s(326),y=s(997),p=s(703),w=s(278),g=s(981);s(736);const h=new d({db:c});h.sync({force:!1}),r.use(i({secret:process.env.SECRET,store:h,resave:!1,saveUninitialized:!1,cookie:{maxAge:864e5}})),r.use(w.initialize()),r.use(w.session()),r.use(((e,t,s)=>{console.log(e.session),console.log(e.user),s()})),r.use("/categories",u),r.use("/checklist",l),r.use("/inventory",m),r.use("/user",y),r.get("/protected-route",p,((e,t)=>{t.send('\n            <h1>You made it to the route.</h1><br>\n            <a href="/logout">Logout</a>')})),r.get("/login-success",((e,t)=>{t.send('<p>You successfully logged in. --\x3e <a href="/protected-route">Go to protected route</a></p>')})),r.get("/login-failure",((e,t)=>{t.send("You entered the wrong email or password.")})),r.get("/login",(async(e,t)=>{t.status(200).send('<form action="/login" method="post">\n            <label for="email">Email:</label><br>    \n            <input type="email" id="email" name="email"></input><br>\n            <label for="password">Password:</label><br>    \n            <input type="password" id="password" name="password"></input><br>\n            <input type="submit" value="Submit"></input>\n        </form>')})),r.get("/",((e,t)=>{t.status(200).send("<h1>Hello World</h1>")})),r.get("/logout",((e,t)=>{e.logout((()=>console.log("logged out"))),t.redirect("/protected-route")})),r.post("/login",w.authenticate("local",{failureRedirect:"/login-failure"}),((e,t)=>{const s=g(e.user);t.status(200),t.cookie("auth_token",s.token,{expires:new Date(Date.now()+s.expires),httpOnly:!0,secure:!0}),t.redirect("/login-success")}));const _=r.listen(o,(()=>{console.log(`Kitchen App is listening on port ${o}`)}));e.exports={app:r,server:_}},703:e=>{e.exports=(e,t,s)=>{e.isAuthenticated()?s():t.status(401).send('<h1>You are not authorized to view this resource</h1><br><a href="/login">Login</a>')}},981:(e,t,s)=>{const a=s(829),r=s(896).readFileSync(__dirname+"/../pemfiles/id_rsa_priv.pem");e.exports=e=>{const{id:t}=e,s={sub:t,iat:Date.now()};return{token:"Bearer "+a.sign(s,r,{algorithm:"RS256",expiresIn:86400,issuer:"localhost:4002",audience:"mylocalapp"}),expires:86400}}},811:e=>{const t=new Error("Nonexistent item"),s=new Error("Item must have an item name, user ID, quantity and category ID"),a=new Error("Request must only contain a category name and user ID"),r=new Error("A user must have an email, a username, and a password"),o=new Error("Empty Body");e.exports={nonExistentItemError:t,incompleteCategoryError:a,incompleteUserError:r,incompleteItemError:s,emptyBodyError:o}},843:(e,t,s)=>{const{nonExistentItemError:a,incompleteItemError:r,incompleteCategoryError:o,incompleteUserError:n,emptyBodyError:i}=s(811),d=s(183);e.exports={validateNewCategory:(e,t,s)=>{if("{}"==JSON.stringify(e.body)){const e=i;e.status=400,s(e)}if(requestObjectKeys=Object.keys(e.body),e.body.category_name&&e.body.user_id&&2==requestObjectKeys.length)if("string"==typeof e.body.category_name&&"number"==typeof e.body.user_id)e.category_name=e.body.category_name,e.user_id=e.body.user_id,s();else{const e=new Error("Category name must be a string and userID must be a number");e.status=400,s(e)}else{const e=o;e.status=400,s(e)}},validateNewGroceryItem:(e,t,s)=>{if("{}"==JSON.stringify(e.body)){const e=i;e.status=400,s(e)}if(requestObjectKeys=Object.keys(e.body),e.body.item_name&&e.body.quantity&&e.body.category_id&&e.body.user_id&&4==requestObjectKeys.length)if(e.item_name=e.body.item_name,e.quantity=e.body.quantity,e.category_id=e.body.category_id,e.user_id=e.body.user_id,"string"==typeof e.item_name&&"number"==typeof e.quantity&&"number"==typeof e.category_id&&"number"==typeof e.body.user_id)s();else{const e=new Error("Item name must be a string, userID, quantity and category ID must be a number");e.status=400,s(e)}else{const e=r;e.status=400,s(e)}},validateID:async(e,t,s)=>{const r=await t.findByPk(e,{transaction:s});if(null===r)throw a;return r},validateNewUser:(e,t,s)=>{if("{}"==JSON.stringify(e.body)){const e=i;e.status=400,s(e)}else if(!e.body.username||!e.body.password||!e.body.email){const e=n;e.status=400,s(e)}if(d.validate(e.body.email))e.email=e.body.email;else{const e=new Error("Invalid Email");e.status=400,s(e)}e.username=e.body.username,e.password=e.body.password,s()},incompleteUserError:n,nonExistentItemError:a}},481:(e,t,s)=>{const a=s(486);e.exports={comparePassword:async function(e,t){let s;try{s=await a.compare(e,t)}catch(e){throw e}return s},hashPassword:async function(e){console.log("in hash pwd");const t=await a.genSalt(10);return{hash:await a.hash(e,t),salt:t}}}},486:e=>{"use strict";e.exports=require("bcrypt")},268:e=>{"use strict";e.exports=require("body-parser")},857:e=>{"use strict";e.exports=require("connect-session-sequelize")},577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},183:e=>{"use strict";e.exports=require("email-validator")},252:e=>{"use strict";e.exports=require("express")},977:e=>{"use strict";e.exports=require("express-session")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},278:e=>{"use strict";e.exports=require("passport")},752:e=>{"use strict";e.exports=require("passport-local")},31:e=>{"use strict";e.exports=require("sequelize")},896:e=>{"use strict";e.exports=require("fs")},932:e=>{"use strict";e.exports=require("process")}},t={};!function s(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,s),o.exports}(985)})();